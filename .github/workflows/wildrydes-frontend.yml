name: Build and Deploy Wildrydes Web App

on:
  push:
    branches:
      - wildrydes-end2end-web-app
    paths:
      - "WildrydesEnd2EndWebApp/frontend/**"

jobs:
  build-wildrydes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd WildrydesEnd2EndWebApp/frontend
          npm ci

      # - name: Build Angular app
      #   env:
      #     NG_APP_PROD_COGNITO_POOL_ID: ${{ secrets['WILDRYDES_COGNITO_POOL_ID'] }}
      #     NG_APP_PROD_COGNITO_CLIENT_ID: ${{ secrets['WILDRYDES_COGNITO_CLIENT_ID'] }}
      #     NG_APP_PROD_API_URL: ${{ secrets['WILDRYDES_API_URL'] }}
      #   run: |
      #     cd WildrydesEnd2EndWebApp/frontend
      #     npm run build

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-southeast-1

      # - name: Deploy to S3
      #   run: |
      #     cd WildrydesEnd2EndWebApp/frontend
      #     aws s3 sync ./dist/wildrydes-app/browser s3://${{ secrets.WILDRYDES_BUCKET_NAME }} --delete

      # - name: Invalidate CloudFront cache
      #   run: |
      #     cd WildrydesEnd2EndWebApp/frontend
      #     aws cloudfront create-invalidation --distribution-id ${{ secrets.WILDRYDES_DISTRIBUTION_ID }} --paths "/*"
