Transform: AWS::Serverless-2016-10-31
Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
      - email
      UserPoolName:
        Fn::Sub: ${AWS::StackName}-UserPool
      AutoVerifiedAttributes:
      - email
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
        - email
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
      - ALLOW_REFRESH_TOKEN_AUTH
      - ALLOW_USER_SRP_AUTH
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub:
        - ${AWS::StackName}-${ResourceName}
        - ResourceName: RestApi
      StageName: Dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ..\..\api.yaml
      EndpointConfiguration: EDGE
      TracingEnabled: false
      Auth:
        Authorizers:
          WildrydesAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - UserPool
              - Arn
      Cors:
        MaxAge: 5
        AllowOrigin: '''*'''
        AllowHeaders: '''Content-Type, X-Amz-Date, Authorization, X-Api-Key, X-Amz-Security-Token'''
  RequestUnicornFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: RequestUnicornFunction
      CodeUri: RequestUnicornFunction
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 3008
      Timeout: 6
      Tracing: Active
      Environment:
        Variables:
          RIDES_TABLE_NAME:
            Ref: Rides
          RIDES_TABLE_ARN:
            Fn::GetAtt:
            - Rides
            - Arn
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: Rides
      Layers:
      - Ref: FunctionsLayer
      Events:
        RestApiPOSTride:
          Type: Api
          Properties:
            Path: /ride
            Method: POST
            RestApiId:
              Ref: RestApi
    Metadata:
      SamResourceId: RequestUnicornFunction
  RequestUnicornFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${RequestUnicornFunction}
  Rides:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: RideId
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: RideId
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  FunctionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Layer ${ResourceName}
        - ResourceName: FunctionsLayer
      ContentUri: FunctionsLayer
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: nodejs20.x
      SamResourceId: FunctionsLayer
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: User Authentication
      Members:
      - UserPoolClient
      - UserPool
    Group2:
      Label: Compute
      Members:
      - FunctionsLayer
      - RequestUnicornFunction
    Group3:
      Label: Databases
      Members:
      - Rides
